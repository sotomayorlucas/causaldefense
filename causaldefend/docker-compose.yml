version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: causaldefend-db
    environment:
      POSTGRES_USER: causaldefend
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: causaldefend
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U causaldefend"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Message Broker
  redis:
    image: redis:7-alpine
    container_name: causaldefend-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Application
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    container_name: causaldefend-api
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://causaldefend:${DB_PASSWORD}@db:5432/causaldefend
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY}
      CUDA_VISIBLE_DEVICES: "0"
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Celery Worker
  worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.worker
    container_name: causaldefend-worker
    command: celery -A causaldefend.api.celery_app worker --loglevel=info
    environment:
      DATABASE_URL: postgresql://causaldefend:${DB_PASSWORD}@db:5432/causaldefend
      REDIS_URL: redis://redis:6379/0
      CUDA_VISIBLE_DEVICES: "0"
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Flower (Celery monitoring)
  flower:
    build:
      context: .
      dockerfile: docker/Dockerfile.worker
    container_name: causaldefend-flower
    command: celery -A causaldefend.api.celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      REDIS_URL: redis://redis:6379/0
    depends_on:
      - redis
      - worker

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: causaldefend-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: causaldefend-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - prometheus

  # Nginx (reverse proxy)
  nginx:
    image: nginx:alpine
    container_name: causaldefend-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/ssl:/etc/nginx/ssl
    depends_on:
      - api

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:
